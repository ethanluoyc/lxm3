[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "lxm3"
description = 'LXM3: XManager launch backend for HPC clusters'
readme = "README.md"
requires-python = ">=3.10,<3.13"
license = {text = "MIT"}
keywords = ["machine-learning", "hpc", "packaging", "singularity"]
authors = [{ name = "Yicheng Luo", email = "ethanluoyc@gmail.com" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
]
dynamic = ["version"]

dependencies = [
    "absl-py",
    "attrs",
    "ml_collections",
    "tomlkit",
    "paramiko",
    "fabric",
    "appdirs",
    "fsspec",
    "async_generator",
    "immutabledict",
    "rich",
    "vcsinfo",
    "docker",
    "pip",
    "shelved-cache>=0.3.1",
    "cachetools>=5.3.2",
]

[project.urls]
homepage = "https://github.com/ethanluoyc/lxm3"
documentation = "https://lxm3.readthedocs.io/en/latest/"
repository = "https://github.com/ethanluoyc/lxm3"

[project.scripts]
lxm3 = "lxm3.cli.cli:entrypoint"

[project.optional-dependencies]
shell = ["IPython"]
pex = [
    "pex>2.1.139",
]

[tool.pdm.dev-dependencies]
dev = [
    "coverage[toml]>=6.5",
    "pytest",
    "pytest-cov",
    "pre-commit",
    "fabric",
    "Sphinx",
    "myst-parser",
    "sphinx_nameko_theme",
    "black>=23.1.0",
    "ruff>=0.0.243",
    "pytest-golden>=0.2.2",
]

[tool.pdm.version]
source = "scm"

[tool.pdm.build]
source-includes = ["tests"]
excludes = ["**/*_test.py"]

[tool.pdm.scripts]
test = "pytest lxm3 tests"
test-cov = "pytest --cov=lxm3 --cov-report=xml tests"
cov = {composite = ["test-cov", "coverage report"]}
docs = "sphinx-build -b html docs docs/build/html -j auto"
lint.shell = "ruff check ."
fmt.shell = "ruff format ."
typecheck.shell = "pyright"

[tool.ruff]
exclude = ["_vendor", "xm", ".venv"]

[tool.ruff.lint]
select = [
  "E",   # pycodestyle
  "F",   # pyflakes
  "I",   # isort
]
ignore = ["E501"]

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["lxm3"]
force-single-line = true
single-line-exclusions = ["typing"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.coverage.paths]
source = ["lxm3", "*/lxm3/lxm3"]

[tool.coverage.run]
omit = [
  "lxm3/_vendor/*",
  "tests/*",
  "conftest.py",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
omit = [
  "lxm3/experimental/*",
  "lxm3/xm_cluster/packaging/digest_util.py"
]

[tool.pyright]
include = ["lxm3"]
exclude = [
  "**/node_modules",
  "**/__pycache__",
  "lxm3/xm",
  "lxm3/_vendor",
]
ignore = [
  "lxm3/xm_cluster/executable_specs.py"
]

reportMissingImports = true
reportMissingTypeStubs = false

pythonVersion = "3.10"
pythonPlatform = "Linux"

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
  "tests",
  "lxm3/_vendor",
]
markers = [
  "integration",
]
addopts = "--import-mode=importlib"
enable_assertion_pass_hook = true
filterwarnings = [
  # xm/core_test.py
  "ignore:cannot collect test class 'TestError':pytest.PytestCollectionWarning",
]
